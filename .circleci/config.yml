# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1


orbs:
  aws-cli: circleci/aws-cli@4.1.3
  aws-cloudformation: orbss/aws-cloudformation@0.1.6
  ansible-playbook: orbss/ansible-playbook@0.0.5
 

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  execute-cloudformation:
    executor: aws-cloudformation/default
    steps:
      - checkout
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: AWS_DEFAULT_REGION
      - aws-cloudformation/deploy:
          stack-name: "lecture13-network-stack"
          template-file-path: "cloudformation/network.yml"
      - aws-cloudformation/deploy:
          stack-name: "lecture13-security-stack"
          template-file-path: "cloudformation/security.yml"
      - aws-cloudformation/deploy:
          stack-name: "lecture13-app1-stack"
          template-file-path: "cloudformation/application1.yml"
          capabilities: CAPABILITY_NAMED_IAM
      - aws-cloudformation/deploy:
          stack-name: "lecture13-app2-stack"
          template-file-path: "cloudformation/application2.yml"
      - aws-cloudformation/deploy:
          stack-name: "lecture13-app3-stack"
          template-file-path: "cloudformation/application3.yml"
          capabilities: CAPABILITY_NAMED_IAM
      - aws-cloudformation/deploy:
          stack-name: "lecture13-app4-stack"
          template-file-path: "cloudformation/application4.yml"
            
  execute-ansible:
    executor: ansible-playbook/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - SHA256:1L4djQiuMIWSJwXsMSIW9HJqz7IjPsQpARLqhU6H+o0
      - ansible-playbook/install:
          version: 2.9.23
      - run:
          name: Install Ansible
          command: pip install ansible
      - run:
          name: Create required directories
          command: |
            mkdir -p ~/.ansible/collections/ansible_collections
      - run:
          name: Verify directories
          command: |
            ls -la ~/.ansible/collections/
      - run:
          name: Install Ansible Galaxy Collections
          command: ansible-galaxy collection install amazon.aws
      - run:
          name: Install Ansible Galaxy Collections
          command: ansible-galaxy collection install community.mysql
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: AWS_DEFAULT_REGION
      - run:
          name: Retrieve CloudFormation outputs and save to file
          command: |
            aws cloudformation describe-stacks --stack-name lecture13-app2-stack --query "Stacks[0].Outputs" --region ap-northeast-1 > cfn_outputs.json
            db_endpoint=$(jq -r '.[] | select(.OutputKey=="RDSInstanceEndpoint") | .OutputValue' cfn_outputs.json)
            echo "DB_ENDPOINT=$db_endpoint" >> $BASH_ENV
      - run:
          name: Retrieve RDS password from AWS Secrets Manager
          command: |
            db_password=$(aws secretsmanager get-secret-value --secret-id RDSSecret --query "SecretString" --output text | jq -r .DBPassword)
            echo "DB_PASSWORD=$db_password" >> $BASH_ENV
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: -u ec2-user -i ansible/inventory --private-key ~/.ssh/authorized_key
      
          
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  lecture13-workflow:
    jobs:
      - execute-cloudformation
      - execute-ansible:
          requires:
            - execute-cloudformation
  
# This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
